-- Tabela Address
CREATE TABLE address (
                         city_id BIGINT NOT NULL,
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         neighborhood_id BIGINT NOT NULL,
                         street_id BIGINT NOT NULL,
                         cep VARCHAR(255) NOT NULL,
                         PRIMARY KEY (id)
);

-- Tabela Admin
CREATE TABLE admin (
                       address_id BIGINT NOT NULL,
                       birth_date TIMESTAMP(6) NOT NULL,
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                       complement VARCHAR(255) NOT NULL,
                       cpf VARCHAR(255) NOT NULL UNIQUE,
                       gender_acronym VARCHAR(255) NOT NULL,
                       main_email VARCHAR(255) NOT NULL UNIQUE,
                       name VARCHAR(255) NOT NULL,
                       number VARCHAR(255) NOT NULL,
                       recovery_email VARCHAR(255) UNIQUE,
                       PRIMARY KEY (id)
);

-- Tabela Admin Phone List
CREATE TABLE admin_phone_list (
                                  admin_id BIGINT NOT NULL,
                                  phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

-- Tabela App User
CREATE TABLE app_user (
                          is_main_email_verified BOOLEAN NOT NULL,
                          is_recovery_email_verified BOOLEAN,
                          reset_password_code_expire_date TIMESTAMP(6),
                          cpf VARCHAR(255) NOT NULL,
                          name VARCHAR(255) NOT NULL,
                          password VARCHAR(255) NOT NULL,
                          person_role VARCHAR(255) NOT NULL CHECK (person_role IN ('ROLE_STUDENT','ROLE_ADMIN','ROLE_CONTENT_MODERATOR')),
                          recovery_email VARCHAR(255) UNIQUE,
                          reset_password_code VARCHAR(255),
                          username VARCHAR(255) NOT NULL,
                          PRIMARY KEY (username)
);

-- Tabela Board Examiner
CREATE TABLE board_examiner (
                                quantity_of_questions INTEGER NOT NULL,
                                quantity_of_selection_process INTEGER NOT NULL,
                                quantity_of_tests INTEGER NOT NULL,
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                cnpj VARCHAR(255) NOT NULL UNIQUE,
                                name VARCHAR(255) NOT NULL,
                                site_url VARCHAR(255) NOT NULL,
                                PRIMARY KEY (id)
);

-- Tabela City
CREATE TABLE city (
                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                      federate_unit_acronym VARCHAR(255) NOT NULL,
                      name VARCHAR(255) NOT NULL,
                      PRIMARY KEY (id)
);

-- Tabela Content Moderator
CREATE TABLE content_moderator (
                                   address_id BIGINT NOT NULL,
                                   birth_date TIMESTAMP(6) NOT NULL,
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                   complement VARCHAR(255) NOT NULL,
                                   cpf VARCHAR(255) NOT NULL UNIQUE,
                                   gender_acronym VARCHAR(255) NOT NULL,
                                   main_email VARCHAR(255) NOT NULL UNIQUE,
                                   name VARCHAR(255) NOT NULL,
                                   number VARCHAR(255) NOT NULL,
                                   recovery_email VARCHAR(255) UNIQUE,
                                   PRIMARY KEY (id)
);

-- Tabela Content Moderator Phone List
CREATE TABLE content_moderator_phone_list (
                                              content_moderator_id BIGINT NOT NULL,
                                              phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

-- Tabela DDD
CREATE TABLE ddd (
                     ddd INTEGER GENERATED BY DEFAULT AS IDENTITY,
                     PRIMARY KEY (ddd)
);

-- Tabela DDI
CREATE TABLE ddi (
                     ddi INTEGER GENERATED BY DEFAULT AS IDENTITY,
                     PRIMARY KEY (ddi)
);

-- Tabela Federate Unit
CREATE TABLE federate_unit (
                               acronym VARCHAR(255) NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (acronym)
);

-- Tabela Function
CREATE TABLE function (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          description VARCHAR(255) NOT NULL,
                          name VARCHAR(255) NOT NULL,
                          PRIMARY KEY (id)
);

-- Tabela Gender
CREATE TABLE gender (
                        acronym VARCHAR(255) NOT NULL,
                        description VARCHAR(255) NOT NULL,
                        PRIMARY KEY (acronym)
);

-- Tabela Institution
CREATE TABLE institution (
                             quantity_of_questions INTEGER NOT NULL,
                             quantity_of_selection_process INTEGER NOT NULL,
                             quantity_of_tests INTEGER NOT NULL,
                             id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                             cnpj VARCHAR(255) NOT NULL UNIQUE,
                             name VARCHAR(255) NOT NULL,
                             site_url VARCHAR(255) NOT NULL,
                             PRIMARY KEY (id)
);

-- Tabela Neighborhood
CREATE TABLE neighborhood (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                              name VARCHAR(255) NOT NULL,
                              PRIMARY KEY (id)
);

-- Tabela Phone
CREATE TABLE phone (
                       ddd_ddd INTEGER NOT NULL,
                       ddi_ddi INTEGER NOT NULL,
                       number VARCHAR(255) NOT NULL,
                       PRIMARY KEY (number)
);

-- Tabela Professional Level
CREATE TABLE professional_level (
                                    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                    description VARCHAR(255) NOT NULL,
                                    name VARCHAR(255) NOT NULL,
                                    PRIMARY KEY (id)
);

-- Tabela Question
CREATE TABLE question (
                          application_date DATE NOT NULL,
                          quantity_of_correct_answers INTEGER NOT NULL,
                          quantity_of_tries INTEGER NOT NULL,
                          quantity_of_wrong_answers INTEGER NOT NULL,
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          question_difficulty_level_id BIGINT NOT NULL,
                          subject_id BIGINT NOT NULL,
                          test_question_category_id BIGINT NOT NULL,
                          explanation VARCHAR(255) NOT NULL,
                          statement VARCHAR(255) NOT NULL,
                          video_explanation_url VARCHAR(255) NOT NULL,
                          PRIMARY KEY (id)
);

-- Tabela Question Question Alternative List
CREATE TABLE question_question_alternative_list (
                                                    question_alternative_list_id BIGINT NOT NULL UNIQUE,
                                                    question_id BIGINT NOT NULL
);

-- Tabela Question Subject Topic List
CREATE TABLE question_subject_topic_list (
                                             question_id BIGINT NOT NULL,
                                             subject_topic_list_id BIGINT NOT NULL
);

-- Tabela Question Alternative
CREATE TABLE question_alternative (
                                      is_correct BOOLEAN NOT NULL,
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      alternative_letter VARCHAR(255) NOT NULL,
                                      statement VARCHAR(255) NOT NULL,
                                      PRIMARY KEY (id)
);

-- Tabela Question Difficulty Level
CREATE TABLE question_difficulty_level (
                                           id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                           description VARCHAR(255) NOT NULL,
                                           name VARCHAR(255) NOT NULL,
                                           PRIMARY KEY (id)
);

-- Tabela Questionnaire
CREATE TABLE questionnaire (
                               is_public BOOLEAN NOT NULL,
                               view_counter INTEGER NOT NULL,
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                               student_id BIGINT NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (id)
);

-- Tabela Questionnaire Question List
CREATE TABLE questionnaire_question_list (
                                             question_list_id BIGINT NOT NULL UNIQUE,
                                             questionnaire_id BIGINT NOT NULL
);

-- Tabela Selection Process
CREATE TABLE selection_process (

                                   view_counter INTEGER NOT NULL,
                                   board_examiner_id BIGINT NOT NULL,
                                   institution_id BIGINT NOT NULL,
                                   city_id BIGINT NOT NULL,
                                   content_moderator_id BIGINT NOT NULL,
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                   selection_process_status_id BIGINT NOT NULL,
                                   name VARCHAR(255) NOT NULL,
                                   url VARCHAR(255),
                                   date DATE NOT NULL,
                                   PRIMARY KEY (id)
);

-- Tabela Selection Process Status
CREATE TABLE selection_process_status (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                          description VARCHAR(255) NOT NULL,
                                          PRIMARY KEY (id)
);

-- Tabela Selection Process Test
CREATE TABLE selection_process_test (
                                        view_counter INTEGER NOT NULL,
                                        function_id BIGINT NOT NULL,
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                        professional_level_id BIGINT NOT NULL,
                                        selection_process_id BIGINT NOT NULL,
                                        test_question_category_id BIGINT NOT NULL,
                                        name VARCHAR(255) NOT NULL,
                                        PRIMARY KEY (id)
);

-- Tabela Selection Process Test Question List
CREATE TABLE selection_process_test_question_list (
                                                      question_list_id BIGINT NOT NULL UNIQUE,
                                                      selection_process_test_id BIGINT NOT NULL
);

-- Tabela Solved Evaluation Test Question
CREATE TABLE solved_evaluation_test_question (
                                                 is_correct BOOLEAN NOT NULL,
                                                 end_date_time TIMESTAMP(6) NOT NULL,
                                                 id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                                 question_alternative_id BIGINT NOT NULL,
                                                 question_id BIGINT NOT NULL,
                                                 start_date_time TIMESTAMP(6) NOT NULL,
                                                 PRIMARY KEY (id)
);

-- Tabela Solved Questionnaire
CREATE TABLE solved_questionnaire (
                                      quantity_of_correct_answers INTEGER NOT NULL,
                                      end_date_time TIMESTAMP(6) NOT NULL,
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      questionnaire_id BIGINT NOT NULL,
                                      start_date_time TIMESTAMP(6) NOT NULL,
                                      student_id BIGINT NOT NULL,
                                      PRIMARY KEY (id)
);

-- Tabela Solved Questionnaire Solved Question List
CREATE TABLE solved_questionnaire_solved_question_list (
                                                           solved_question_list_id BIGINT NOT NULL UNIQUE,
                                                           solved_questionnaire_id BIGINT NOT NULL
);

-- Tabela Solved Selection Process Test
CREATE TABLE solved_selection_process_test (
                                               quantity_of_correct_answers INTEGER NOT NULL,
                                               end_date_time TIMESTAMP(6) NOT NULL,
                                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                               selection_process_test_id BIGINT NOT NULL,
                                               start_date_time TIMESTAMP(6) NOT NULL,
                                               student_id BIGINT NOT NULL,
                                               PRIMARY KEY (id)
);

-- Tabela Solved Selection Process Test Solved Question List
CREATE TABLE solved_selection_process_test_solved_question_list (
                                                                    solved_question_list_id BIGINT NOT NULL UNIQUE,
                                                                    solved_selection_process_test_id BIGINT NOT NULL
);

-- Tabela Street
CREATE TABLE street (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                        name VARCHAR(255) NOT NULL,
                        street_type_acronym VARCHAR(255) NOT NULL,
                        PRIMARY KEY (id)
);

-- Tabela Street Type
CREATE TABLE street_type (
                             acronym VARCHAR(255) NOT NULL,
                             name VARCHAR(255) NOT NULL,
                             PRIMARY KEY (acronym)
);

-- Tabela Student
CREATE TABLE student (
                         address_id BIGINT NOT NULL,
                         birth_date TIMESTAMP(6) NOT NULL,
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         complement VARCHAR(255) NOT NULL,
                         cpf VARCHAR(255) NOT NULL UNIQUE,
                         gender_acronym VARCHAR(255) NOT NULL,
                         main_email VARCHAR(255) NOT NULL UNIQUE,
                         name VARCHAR(255) NOT NULL,
                         number VARCHAR(255) NOT NULL,
                         recovery_email VARCHAR(255) UNIQUE,
                         PRIMARY KEY (id)
);

-- Tabela Student Phone List
CREATE TABLE student_phone_list (
                                    student_id BIGINT NOT NULL,
                                    phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

-- Tabela Subject
CREATE TABLE subject (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         description VARCHAR(255) NOT NULL,
                         name VARCHAR(255) NOT NULL,
                         PRIMARY KEY (id)
);

-- Tabela Subject Topic
CREATE TABLE subject_topic (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                               subject_id BIGINT NOT NULL,
                               description VARCHAR(255) NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (id)
);

-- Tabela Test Question Category
CREATE TABLE test_question_category (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                        name VARCHAR(255) NOT NULL,
                                        PRIMARY KEY (id)
);

-- Tabela address
ALTER TABLE address ADD CONSTRAINT fk_address_city FOREIGN KEY (city_id) REFERENCES city(id);
ALTER TABLE address ADD CONSTRAINT fk_address_neighborhood FOREIGN KEY (neighborhood_id) REFERENCES neighborhood(id);
ALTER TABLE address ADD CONSTRAINT fk_address_street FOREIGN KEY (street_id) REFERENCES street(id);

-- Tabela admin
ALTER TABLE admin ADD CONSTRAINT fk_admin_address FOREIGN KEY (address_id) REFERENCES address(id);
ALTER TABLE admin ADD CONSTRAINT fk_admin_gender FOREIGN KEY (gender_acronym) REFERENCES gender(acronym);

-- Tabela admin_phone_list
ALTER TABLE admin_phone_list ADD CONSTRAINT fk_admin_phone_list_admin FOREIGN KEY (admin_id) REFERENCES admin(id);
ALTER TABLE admin_phone_list ADD CONSTRAINT fk_admin_phone_list_phone FOREIGN KEY (phone_list_number) REFERENCES phone(number);

-- Tabela city
ALTER TABLE city ADD CONSTRAINT fk_city_federate_unit FOREIGN KEY (federate_unit_acronym) REFERENCES federate_unit(acronym);

-- ️ Tabela content_moderator
ALTER TABLE content_moderator ADD CONSTRAINT fk_content_moderator_address FOREIGN KEY (address_id) REFERENCES address(id);
ALTER TABLE content_moderator ADD CONSTRAINT fk_content_moderator_gender FOREIGN KEY (gender_acronym) REFERENCES gender(acronym);

-- Tabela content_moderator_phone_list
ALTER TABLE content_moderator_phone_list ADD CONSTRAINT fk_content_moderator_phone_list_moderator FOREIGN KEY (content_moderator_id) REFERENCES content_moderator(id);
ALTER TABLE content_moderator_phone_list ADD CONSTRAINT fk_content_moderator_phone_list_phone FOREIGN KEY (phone_list_number) REFERENCES phone(number);

-- Tabela phone
ALTER TABLE phone ADD CONSTRAINT fk_phone_ddd FOREIGN KEY (ddd_ddd) REFERENCES ddd(ddd);
ALTER TABLE phone ADD CONSTRAINT fk_phone_ddi FOREIGN KEY (ddi_ddi) REFERENCES ddi(ddi);

-- Tabela question
ALTER TABLE question ADD CONSTRAINT fk_question_difficulty_level FOREIGN KEY (question_difficulty_level_id) REFERENCES question_difficulty_level(id);
ALTER TABLE question ADD CONSTRAINT fk_question_subject FOREIGN KEY (subject_id) REFERENCES subject(id);
ALTER TABLE question ADD CONSTRAINT fk_question_test_question_category FOREIGN KEY (test_question_category_id) REFERENCES test_question_category(id);

-- Tabela question_question_alternative_list
ALTER TABLE question_question_alternative_list ADD CONSTRAINT fk_question_alternative_list FOREIGN KEY (question_alternative_list_id) REFERENCES question_alternative(id);
ALTER TABLE question_question_alternative_list ADD CONSTRAINT fk_question_question FOREIGN KEY (question_id) REFERENCES question(id);

-- Tabela question_subject_topic_list
ALTER TABLE question_subject_topic_list ADD CONSTRAINT fk_question_subject_topic_list_question FOREIGN KEY (question_id) REFERENCES question(id);
ALTER TABLE question_subject_topic_list ADD CONSTRAINT fk_question_subject_topic_list_subject_topic FOREIGN KEY (subject_topic_list_id) REFERENCES subject_topic(id);

-- Tabela questionnaire
ALTER TABLE questionnaire ADD CONSTRAINT fk_questionnaire_student FOREIGN KEY (student_id) REFERENCES student(id);

-- Tabela questionnaire_question_list
ALTER TABLE questionnaire_question_list ADD CONSTRAINT fk_questionnaire_question_list_question FOREIGN KEY (question_list_id) REFERENCES question(id);
ALTER TABLE questionnaire_question_list ADD CONSTRAINT fk_questionnaire_question_list_questionnaire FOREIGN KEY (questionnaire_id) REFERENCES questionnaire(id);

-- Tabela selection_process
ALTER TABLE selection_process ADD CONSTRAINT fk_selection_process_board_examiner FOREIGN KEY (board_examiner_id) REFERENCES board_examiner(id);
ALTER TABLE selection_process ADD CONSTRAINT fk_selection_process_institution FOREIGN KEY (institution_id) REFERENCES institution(id);
ALTER TABLE selection_process ADD CONSTRAINT fk_selection_process_city FOREIGN KEY (city_id) REFERENCES city(id);
ALTER TABLE selection_process ADD CONSTRAINT fk_selection_process_content_moderator FOREIGN KEY (content_moderator_id) REFERENCES content_moderator(id);
ALTER TABLE selection_process ADD CONSTRAINT fk_selection_process_status FOREIGN KEY (selection_process_status_id) REFERENCES selection_process_status(id);

-- Tabela selection_process_test
ALTER TABLE selection_process_test ADD CONSTRAINT fk_selection_process_test_function FOREIGN KEY (function_id) REFERENCES function(id);
ALTER TABLE selection_process_test ADD CONSTRAINT fk_selection_process_test_professional_level FOREIGN KEY (professional_level_id) REFERENCES professional_level(id);
ALTER TABLE selection_process_test ADD CONSTRAINT fk_selection_process_test_process FOREIGN KEY (selection_process_id) REFERENCES selection_process(id);
ALTER TABLE selection_process_test ADD CONSTRAINT fk_selection_process_test_question_category FOREIGN KEY (test_question_category_id) REFERENCES test_question_category(id);

-- Tabela selection_process_test_question_list
ALTER TABLE selection_process_test_question_list ADD CONSTRAINT fk_selection_process_test_question_list_question FOREIGN KEY (question_list_id) REFERENCES question(id);
ALTER TABLE selection_process_test_question_list ADD CONSTRAINT fk_selection_process_test_question_list_test FOREIGN KEY (selection_process_test_id) REFERENCES selection_process_test(id);

-- Tabela student
ALTER TABLE student ADD CONSTRAINT fk_student_address FOREIGN KEY (address_id) REFERENCES address(id);
ALTER TABLE student ADD CONSTRAINT fk_student_gender FOREIGN KEY (gender_acronym) REFERENCES gender(acronym);

-- Tabela student_phone_list
ALTER TABLE student_phone_list ADD CONSTRAINT fk_student_phone_list_student FOREIGN KEY (student_id) REFERENCES student(id);
ALTER TABLE student_phone_list ADD CONSTRAINT fk_student_phone_list_phone FOREIGN KEY (phone_list_number) REFERENCES phone(number);

-- Tabela subject_topic
ALTER TABLE subject_topic ADD CONSTRAINT fk_subject_topic_subject FOREIGN KEY (subject_id) REFERENCES subject(id);

-- Tabela solved_evaluation_test_question
ALTER TABLE solved_evaluation_test_question ADD CONSTRAINT fk_solved_evaluation_test_question_question FOREIGN KEY (question_id) REFERENCES question(id);
ALTER TABLE solved_evaluation_test_question ADD CONSTRAINT fk_solved_evaluation_test_question_alternative FOREIGN KEY (question_alternative_id) REFERENCES question_alternative(id);

-- Tabela solved_questionnaire
ALTER TABLE solved_questionnaire ADD CONSTRAINT fk_solved_questionnaire_student FOREIGN KEY (student_id) REFERENCES student(id);
ALTER TABLE solved_questionnaire ADD CONSTRAINT fk_solved_questionnaire_questionnaire FOREIGN KEY (questionnaire_id) REFERENCES questionnaire(id);

-- Tabela solved_questionnaire_solved_question_list
ALTER TABLE solved_questionnaire_solved_question_list ADD CONSTRAINT fk_solved_questionnaire_solved_question FOREIGN KEY (solved_question_list_id) REFERENCES solved_evaluation_test_question(id);
ALTER TABLE solved_questionnaire_solved_question_list ADD CONSTRAINT fk_solved_questionnaire_solved_question_list_questionnaire FOREIGN KEY (solved_questionnaire_id) REFERENCES solved_questionnaire(id);

-- Tabela solved_selection_process_test
ALTER TABLE solved_selection_process_test ADD CONSTRAINT fk_solved_selection_process_test_student FOREIGN KEY (student_id) REFERENCES student(id);
ALTER TABLE solved_selection_process_test ADD CONSTRAINT fk_solved_selection_process_test_process_test FOREIGN KEY (selection_process_test_id) REFERENCES selection_process_test(id);

-- Tabela solved_selection_process_test_solved_question_list
ALTER TABLE solved_selection_process_test_solved_question_list ADD CONSTRAINT fk_solved_selection_process_test_solved_question_list_question FOREIGN KEY (solved_question_list_id) REFERENCES solved_evaluation_test_question(id);
ALTER TABLE solved_selection_process_test_solved_question_list ADD CONSTRAINT fk_solved_selection_process_test_solved_question_list_test FOREIGN KEY (solved_selection_process_test_id) REFERENCES solved_selection_process_test(id);

-- Tabela street
ALTER TABLE street ADD CONSTRAINT fk_street_type FOREIGN KEY (street_type_acronym) REFERENCES street_type(acronym);
