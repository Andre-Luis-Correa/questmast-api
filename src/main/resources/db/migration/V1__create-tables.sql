------------------------------------------------------------------------------
-- Tabelas de referência básica
------------------------------------------------------------------------------
CREATE TABLE federate_unit (
                               acronym VARCHAR(255) NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (acronym)
);

CREATE TABLE street_type (
                             acronym VARCHAR(255) NOT NULL,
                             name VARCHAR(255) NOT NULL,
                             PRIMARY KEY (acronym)
);

CREATE TABLE gender (
                        acronym VARCHAR(255) NOT NULL,
                        description VARCHAR(255) NOT NULL,
                        PRIMARY KEY (acronym)
);

CREATE TABLE question_difficulty_level (
                                           id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                           description VARCHAR(255) NOT NULL,
                                           name VARCHAR(255) NOT NULL,
                                           PRIMARY KEY (id)
);

CREATE TABLE selection_process_status (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                          description VARCHAR(255) NOT NULL,
                                          PRIMARY KEY (id)
);

CREATE TABLE subject (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         description VARCHAR(255) NOT NULL,
                         name VARCHAR(255) NOT NULL,
                         PRIMARY KEY (id)
);

CREATE TABLE test_question_category (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                        name VARCHAR(255) NOT NULL,
                                        PRIMARY KEY (id)
);

------------------------------------------------------------------------------
-- Tabelas relacionadas a localidade/endereços
------------------------------------------------------------------------------
CREATE TABLE city (
                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                      federate_unit_acronym VARCHAR(255) NOT NULL,
                      name VARCHAR(255) NOT NULL,
                      PRIMARY KEY (id)
);

CREATE TABLE neighborhood (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                              name VARCHAR(255) NOT NULL,
                              PRIMARY KEY (id)
);

CREATE TABLE street (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                        name VARCHAR(255) NOT NULL,
                        street_type_acronym VARCHAR(255) NOT NULL,
                        PRIMARY KEY (id)
);

CREATE TABLE address (
                         city_id BIGINT NOT NULL,
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         neighborhood_id BIGINT NOT NULL,
                         street_id BIGINT NOT NULL,
                         cep VARCHAR(255) NOT NULL,
                         PRIMARY KEY (id)
);

------------------------------------------------------------------------------
-- Tabelas de DDD/DDI e telefones
------------------------------------------------------------------------------
CREATE TABLE ddd (
                     ddd INTEGER GENERATED BY DEFAULT AS IDENTITY,
                     PRIMARY KEY (ddd)
);

CREATE TABLE ddi (
                     ddi INTEGER GENERATED BY DEFAULT AS IDENTITY,
                     PRIMARY KEY (ddi)
);

CREATE TABLE phone (
                       ddd_ddd INTEGER NOT NULL,
                       ddi_ddi INTEGER NOT NULL,
                       number VARCHAR(255) NOT NULL,
                       PRIMARY KEY (number)
);

------------------------------------------------------------------------------
-- Tabelas de pessoas/usuários
------------------------------------------------------------------------------
CREATE TABLE admin (
                       address_id BIGINT NOT NULL,
                       birth_date TIMESTAMP(6) NOT NULL,
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                       complement VARCHAR(255) NOT NULL,
                       cpf VARCHAR(255) NOT NULL UNIQUE,
                       gender_acronym VARCHAR(255) NOT NULL,
                       main_email VARCHAR(255) NOT NULL UNIQUE,
                       name VARCHAR(255) NOT NULL,
                       number VARCHAR(255) NOT NULL,
                       recovery_email VARCHAR(255) UNIQUE,
                       PRIMARY KEY (id)
);

CREATE TABLE content_moderator (
                                   address_id BIGINT NOT NULL,
                                   birth_date TIMESTAMP(6) NOT NULL,
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                   complement VARCHAR(255) NOT NULL,
                                   cpf VARCHAR(255) NOT NULL UNIQUE,
                                   gender_acronym VARCHAR(255) NOT NULL,
                                   main_email VARCHAR(255) NOT NULL UNIQUE,
                                   name VARCHAR(255) NOT NULL,
                                   number VARCHAR(255) NOT NULL,
                                   recovery_email VARCHAR(255) UNIQUE,
                                   PRIMARY KEY (id)
);

CREATE TABLE student (
                         address_id BIGINT NOT NULL,
                         birth_date TIMESTAMP(6) NOT NULL,
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         complement VARCHAR(255) NOT NULL,
                         cpf VARCHAR(255) NOT NULL UNIQUE,
                         gender_acronym VARCHAR(255) NOT NULL,
                         main_email VARCHAR(255) NOT NULL UNIQUE,
                         name VARCHAR(255) NOT NULL,
                         number VARCHAR(255) NOT NULL,
                         recovery_email VARCHAR(255) UNIQUE,
                         PRIMARY KEY (id)
);

CREATE TABLE admin_phone_list (
                                  admin_id BIGINT NOT NULL,
                                  phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE content_moderator_phone_list (
                                              content_moderator_id BIGINT NOT NULL,
                                              phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE student_phone_list (
                                    student_id BIGINT NOT NULL,
                                    phone_list_number VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE app_user (
                          is_main_email_verified BOOLEAN NOT NULL,
                          is_recovery_email_verified BOOLEAN,
                          reset_password_code_expire_date TIMESTAMP(6),
                          cpf VARCHAR(255) NOT NULL,
                          name VARCHAR(255) NOT NULL,
                          password VARCHAR(255) NOT NULL,
                          person_role VARCHAR(255) NOT NULL CHECK (person_role IN ('ROLE_STUDENT','ROLE_ADMIN','ROLE_CONTENT_MODERATOR')),
                          recovery_email VARCHAR(255) UNIQUE,
                          reset_password_code VARCHAR(255),
                          username VARCHAR(255) NOT NULL,
                          PRIMARY KEY (username)
);

------------------------------------------------------------------------------
-- Tabelas de entidades de seleção/processos
------------------------------------------------------------------------------
CREATE TABLE board_examiner (
                                quantity_of_questions INTEGER NOT NULL,
                                quantity_of_selection_process INTEGER NOT NULL,
                                quantity_of_tests INTEGER NOT NULL,
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                cnpj VARCHAR(255) NOT NULL UNIQUE,
                                name VARCHAR(255) NOT NULL,
                                site_url VARCHAR(255) NOT NULL,
                                PRIMARY KEY (id)
);

CREATE TABLE institution (
                             quantity_of_questions INTEGER NOT NULL,
                             quantity_of_selection_process INTEGER NOT NULL,
                             quantity_of_tests INTEGER NOT NULL,
                             id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                             cnpj VARCHAR(255) NOT NULL UNIQUE,
                             name VARCHAR(255) NOT NULL,
                             site_url VARCHAR(255) NOT NULL,
                             PRIMARY KEY (id)
);

CREATE TABLE selection_process (
                                   opening_date DATE NOT NULL,
                                   view_counter INTEGER NOT NULL,
                                   board_examiner_id BIGINT NOT NULL,
                                   city_id BIGINT NOT NULL,
                                   content_moderator_id BIGINT NOT NULL,
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                   institution_id BIGINT NOT NULL,
                                   selection_process_status_id BIGINT NOT NULL,
                                   name VARCHAR(255) NOT NULL,
                                   url VARCHAR(255),
                                   PRIMARY KEY (id)
);

CREATE TABLE professional_level (
                                    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                    description VARCHAR(255) NOT NULL,
                                    name VARCHAR(255) NOT NULL,
                                    PRIMARY KEY (id)
);

CREATE TABLE function (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          description VARCHAR(255) NOT NULL,
                          name VARCHAR(255) NOT NULL,
                          PRIMARY KEY (id)
);

CREATE TABLE selection_process_test (
                                        application_date DATE NOT NULL,
                                        view_counter INTEGER NOT NULL,
                                        function_id BIGINT NOT NULL,
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                        professional_level_id BIGINT NOT NULL,
                                        selection_process_id BIGINT NOT NULL,
                                        test_question_category_id BIGINT NOT NULL,
                                        name VARCHAR(255) NOT NULL,
                                        PRIMARY KEY (id)
);

CREATE TABLE selection_process_test_question_list (
                                                      question_list_id BIGINT NOT NULL UNIQUE,
                                                      selection_process_test_id BIGINT NOT NULL
);

------------------------------------------------------------------------------
-- Tabelas de perguntas, alternativas e questões
------------------------------------------------------------------------------
CREATE TABLE question (
                          application_date DATE NOT NULL,
                          quantity_of_correct_answers INTEGER NOT NULL,
                          quantity_of_tries INTEGER NOT NULL,
                          quantity_of_wrong_answers INTEGER NOT NULL,
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          question_difficulty_level_id BIGINT NOT NULL,
                          subject_id BIGINT NOT NULL,
                          test_question_category_id BIGINT NOT NULL,
                          explanation VARCHAR(255) NOT NULL,
                          statement VARCHAR(255) NOT NULL,
                          video_explanation_url VARCHAR(255) NOT NULL,
                          PRIMARY KEY (id)
);

CREATE TABLE question_alternative (
                                      is_correct BOOLEAN NOT NULL,
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      statement VARCHAR(255) NOT NULL,
                                      PRIMARY KEY (id)
);

CREATE TABLE question_question_alternative_list (
                                                    question_alternative_list_id BIGINT NOT NULL UNIQUE,
                                                    question_id BIGINT NOT NULL
);

CREATE TABLE question_subject_topic_list (
                                             question_id BIGINT NOT NULL,
                                             subject_topic_list_id BIGINT NOT NULL,
                                             PRIMARY KEY (question_id, subject_topic_list_id)
);

CREATE TABLE subject_topic (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                               subject_id BIGINT NOT NULL,
                               description VARCHAR(255) NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (id)
);

------------------------------------------------------------------------------
-- Tabelas de questionários
------------------------------------------------------------------------------
CREATE TABLE questionnaire (
                               is_public BOOLEAN NOT NULL,
                               view_counter INTEGER NOT NULL,
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                               student_id BIGINT NOT NULL,
                               name VARCHAR(255) NOT NULL,
                               PRIMARY KEY (id)
);

CREATE TABLE questionnaire_question_list (
                                             question_list_id BIGINT NOT NULL UNIQUE,
                                             questionnaire_id BIGINT NOT NULL
);

------------------------------------------------------------------------------
-- Tabelas de resoluções (solved)
------------------------------------------------------------------------------
CREATE TABLE solved_evaluation_test_question (
                                                 is_correct BOOLEAN NOT NULL,
                                                 end_date_time TIMESTAMP(6) NOT NULL,
                                                 id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                                 question_alternative_id BIGINT NOT NULL,
                                                 question_id BIGINT NOT NULL,
                                                 start_date_time TIMESTAMP(6) NOT NULL,
                                                 PRIMARY KEY (id)
);

CREATE TABLE solved_questionnaire (
                                      quantity_of_correct_answers INTEGER NOT NULL,
                                      end_date_time TIMESTAMP(6) NOT NULL,
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      questionnaire_id BIGINT NOT NULL,
                                      start_date_time TIMESTAMP(6) NOT NULL,
                                      student_id BIGINT NOT NULL,
                                      PRIMARY KEY (id)
);

CREATE TABLE solved_questionnaire_solved_question_list (
                                                           solved_question_list_id BIGINT NOT NULL UNIQUE,
                                                           solved_questionnaire_id BIGINT NOT NULL
);

CREATE TABLE solved_selection_process_test (
                                               quantity_of_correct_answers INTEGER NOT NULL,
                                               end_date_time TIMESTAMP(6) NOT NULL,
                                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                               selection_process_test_id BIGINT NOT NULL,
                                               start_date_time TIMESTAMP(6) NOT NULL,
                                               student_id BIGINT NOT NULL,
                                               PRIMARY KEY (id)
);

CREATE TABLE solved_selection_process_test_solved_question_list (
                                                                    solved_question_list_id BIGINT NOT NULL UNIQUE,
                                                                    solved_selection_process_test_id BIGINT NOT NULL
);

-- Address
ALTER TABLE IF EXISTS address
    ADD CONSTRAINT FKpo044ng5x4gynb291cv24vtea
    FOREIGN KEY (city_id) REFERENCES city;

ALTER TABLE IF EXISTS address
    ADD CONSTRAINT FKdxhmuat5wh4dhiynylp7nh76y
    FOREIGN KEY (neighborhood_id) REFERENCES neighborhood;

ALTER TABLE IF EXISTS address
    ADD CONSTRAINT FKft0pt0eni21ptl8s37dtq8s9
    FOREIGN KEY (street_id) REFERENCES street;

-- Admin
ALTER TABLE IF EXISTS admin
    ADD CONSTRAINT FKjpklr1k3hma6fhgx39cj45dfs
    FOREIGN KEY (address_id) REFERENCES address;

ALTER TABLE IF EXISTS admin
    ADD CONSTRAINT FKt4yq4gogae07od5m6kpjaamxb
    FOREIGN KEY (gender_acronym) REFERENCES gender;

ALTER TABLE IF EXISTS admin_phone_list
    ADD CONSTRAINT FKpfpxne7gpomb5aok9em4y3ybw
    FOREIGN KEY (admin_id) REFERENCES admin;

ALTER TABLE IF EXISTS admin_phone_list
    ADD CONSTRAINT FKcam3f7nbrksdcgop5atfeahct
    FOREIGN KEY (phone_list_number) REFERENCES phone;

-- City
ALTER TABLE IF EXISTS city
    ADD CONSTRAINT FKfwovldcx56js97hho7wfdmvqb
    FOREIGN KEY (federate_unit_acronym) REFERENCES federate_unit;

-- Content Moderator
ALTER TABLE IF EXISTS content_moderator
    ADD CONSTRAINT FKqlk55wb4lrnxjfbhct0c9vwr9
    FOREIGN KEY (address_id) REFERENCES address;

ALTER TABLE IF EXISTS content_moderator
    ADD CONSTRAINT FKqsnns43awm7if1e387ub45bke
    FOREIGN KEY (gender_acronym) REFERENCES gender;

ALTER TABLE IF EXISTS content_moderator_phone_list
    ADD CONSTRAINT FKscuhmytj59imiw99eqvwbb8e2
    FOREIGN KEY (content_moderator_id) REFERENCES content_moderator;

ALTER TABLE IF EXISTS content_moderator_phone_list
    ADD CONSTRAINT FKdhoflp39xdfj3whd4o03bbkw1
    FOREIGN KEY (phone_list_number) REFERENCES phone;

-- Phone
ALTER TABLE IF EXISTS phone
    ADD CONSTRAINT FKsngt6wcmcltvmmjanjjpwg3w5
    FOREIGN KEY (ddd_ddd) REFERENCES ddd;

ALTER TABLE IF EXISTS phone
    ADD CONSTRAINT FKpvq0lbhpplhawdhbbg6bo1s4s
    FOREIGN KEY (ddi_ddi) REFERENCES ddi;

-- Question
ALTER TABLE IF EXISTS question
    ADD CONSTRAINT FKd84iyfnspxoeb6oo7q2f0kk5
    FOREIGN KEY (question_difficulty_level_id) REFERENCES question_difficulty_level;

ALTER TABLE IF EXISTS question
    ADD CONSTRAINT FKkfvh71q42645g7p9cgxjygbgc
    FOREIGN KEY (subject_id) REFERENCES subject;

ALTER TABLE IF EXISTS question
    ADD CONSTRAINT FKldv2um6t26uj2w83u1450bepq
    FOREIGN KEY (test_question_category_id) REFERENCES test_question_category;

-- Question <-> Alternatives
ALTER TABLE IF EXISTS question_question_alternative_list
    ADD CONSTRAINT FKaa63vb9ue1dhfg8xrlpynk3bf
    FOREIGN KEY (question_alternative_list_id) REFERENCES question_alternative;

ALTER TABLE IF EXISTS question_question_alternative_list
    ADD CONSTRAINT FK2whai33v1ymbdb9lchd9ode7g
    FOREIGN KEY (question_id) REFERENCES question;

-- Subject Topic
ALTER TABLE IF EXISTS subject_topic
    ADD CONSTRAINT FKrkqlb2sjd23jw0jic6blsbbdh
    FOREIGN KEY (subject_id) REFERENCES subject;

-- Question <-> Subject Topic
ALTER TABLE IF EXISTS question_subject_topic_list
    ADD CONSTRAINT FKsxr9s1o93xr9gsjcj4jrgls4l
    FOREIGN KEY (subject_topic_list_id) REFERENCES subject_topic;

ALTER TABLE IF EXISTS question_subject_topic_list
    ADD CONSTRAINT FKbuiw2wtvdn2bnme8p8hc7wcxr
    FOREIGN KEY (question_id) REFERENCES question;

-- Questionnaire
ALTER TABLE IF EXISTS questionnaire
    ADD CONSTRAINT FKinenp83jeaky1ybwggmajly8g
    FOREIGN KEY (student_id) REFERENCES student;

ALTER TABLE IF EXISTS questionnaire_question_list
    ADD CONSTRAINT FKhs07vb3o1l0j0onmmwftycmkl
    FOREIGN KEY (question_list_id) REFERENCES question;

ALTER TABLE IF EXISTS questionnaire_question_list
    ADD CONSTRAINT FKslca7ndtqb3bj0wt2s27ul5n9
    FOREIGN KEY (questionnaire_id) REFERENCES questionnaire;

-- Selection Process
ALTER TABLE IF EXISTS selection_process
    ADD CONSTRAINT FKr6psdgcixtb2we7sacg2m3qdh
    FOREIGN KEY (board_examiner_id) REFERENCES board_examiner;

ALTER TABLE IF EXISTS selection_process
    ADD CONSTRAINT FKagma780ehfyy4c9fd93butk8m
    FOREIGN KEY (city_id) REFERENCES city;

ALTER TABLE IF EXISTS selection_process
    ADD CONSTRAINT FKnr960e7r05im3xho4bpvwroef
    FOREIGN KEY (content_moderator_id) REFERENCES content_moderator;

ALTER TABLE IF EXISTS selection_process
    ADD CONSTRAINT FKgncb679wb3bg9kmkvjp2emdkw
    FOREIGN KEY (institution_id) REFERENCES institution;

ALTER TABLE IF EXISTS selection_process
    ADD CONSTRAINT FKlqlo9p3bxs3orgjfn81g1217
    FOREIGN KEY (selection_process_status_id) REFERENCES selection_process_status;

-- Selection Process Test
ALTER TABLE IF EXISTS selection_process_test
    ADD CONSTRAINT FKqcj950q3rjuvg7kqf18h13a8r
    FOREIGN KEY (function_id) REFERENCES function;

ALTER TABLE IF EXISTS selection_process_test
    ADD CONSTRAINT FKijpa5fj1huf527tju6audoui5
    FOREIGN KEY (professional_level_id) REFERENCES professional_level;

ALTER TABLE IF EXISTS selection_process_test
    ADD CONSTRAINT FKnushjou5yewjq5rx0kku3eulr
    FOREIGN KEY (selection_process_id) REFERENCES selection_process;

ALTER TABLE IF EXISTS selection_process_test
    ADD CONSTRAINT FKc3y0ebhd8s4ojhwdsblqh8xrv
    FOREIGN KEY (test_question_category_id) REFERENCES test_question_category;

ALTER TABLE IF EXISTS selection_process_test_question_list
    ADD CONSTRAINT FKqopguf573d4075lbsi8yap1ej
    FOREIGN KEY (question_list_id) REFERENCES question;

ALTER TABLE IF EXISTS selection_process_test_question_list
    ADD CONSTRAINT FKoonvyw7w8ftbs5pma0y4qqpcw
    FOREIGN KEY (selection_process_test_id) REFERENCES selection_process_test;

-- Solved Evaluation Test Question
ALTER TABLE IF EXISTS solved_evaluation_test_question
    ADD CONSTRAINT FK2ha5ssug08qdjgaypvavynt5q
    FOREIGN KEY (question_id) REFERENCES question;

ALTER TABLE IF EXISTS solved_evaluation_test_question
    ADD CONSTRAINT FK9j0naimib2ui8tjnrhysrqq42
    FOREIGN KEY (question_alternative_id) REFERENCES question_alternative;

-- Solved Questionnaire
ALTER TABLE IF EXISTS solved_questionnaire
    ADD CONSTRAINT FK2gfb36srhv578emcth2ndufy4
    FOREIGN KEY (student_id) REFERENCES student;

ALTER TABLE IF EXISTS solved_questionnaire
    ADD CONSTRAINT FKk772or7q3n4l0hhe7nx5u45b4
    FOREIGN KEY (questionnaire_id) REFERENCES questionnaire;

ALTER TABLE IF EXISTS solved_questionnaire_solved_question_list
    ADD CONSTRAINT FK5ebr9ag7qno8hf2kdw8vjct2c
    FOREIGN KEY (solved_question_list_id) REFERENCES solved_evaluation_test_question;

ALTER TABLE IF EXISTS solved_questionnaire_solved_question_list
    ADD CONSTRAINT FK550ntpr553oehg0l2cewcbtg9
    FOREIGN KEY (solved_questionnaire_id) REFERENCES solved_questionnaire;

-- Solved Selection Process Test
ALTER TABLE IF EXISTS solved_selection_process_test
    ADD CONSTRAINT FKra2vmw2acewerhnnk8proc844
    FOREIGN KEY (student_id) REFERENCES student;

ALTER TABLE IF EXISTS solved_selection_process_test
    ADD CONSTRAINT FKjtg89rgmgjpfuqu71ku3vk9e
    FOREIGN KEY (selection_process_test_id) REFERENCES selection_process_test;

ALTER TABLE IF EXISTS solved_selection_process_test_solved_question_list
    ADD CONSTRAINT FK8xe44putbheu8xg51a1k05b4y
    FOREIGN KEY (solved_question_list_id) REFERENCES solved_evaluation_test_question;

ALTER TABLE IF EXISTS solved_selection_process_test_solved_question_list
    ADD CONSTRAINT FKmoyd32ronmesuypyvuu0hrhf0
    FOREIGN KEY (solved_selection_process_test_id) REFERENCES solved_selection_process_test;

-- Student
ALTER TABLE IF EXISTS student
    ADD CONSTRAINT FKcaf6ht0hfw93lwc13ny0sdmvo
    FOREIGN KEY (address_id) REFERENCES address;

ALTER TABLE IF EXISTS student
    ADD CONSTRAINT FKe1gl2mo3958p8ug0lpvecl0r
    FOREIGN KEY (gender_acronym) REFERENCES gender;

ALTER TABLE IF EXISTS student_phone_list
    ADD CONSTRAINT FKjcuok4e2sds27o092n6f8175o
    FOREIGN KEY (student_id) REFERENCES student;

ALTER TABLE IF EXISTS student_phone_list
    ADD CONSTRAINT FK7osb0a5reh66pinm0hxitb0t6
    FOREIGN KEY (phone_list_number) REFERENCES phone;

-- Street
ALTER TABLE IF EXISTS street
    ADD CONSTRAINT FKqqml66pjs5if8okvq99xx8vm9
    FOREIGN KEY (street_type_acronym) REFERENCES street_type;
